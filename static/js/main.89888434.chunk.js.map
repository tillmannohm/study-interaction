{"version":3,"sources":["PreviewPane.js","Sliders/components.js","Sliders/BarChart.js","Sliders/RangeSlider.js","Sliders/Sliders.js","SliderPane.js","QueryFilter.js","FilterPane.js","InfoFields.js","InfoPane.js","ViewPane.js","MappingsPane.js","Export.js","Projection.js","Layout.js","Data.js","App.js","serviceWorker.js","index.js"],"names":["PreviewPane","Component","constructor","props","super","this","state","dimensions","imgURL","previewImage","timeoutId","componentDidMount","setPreviewPaneCanvas","side_canvas","componentDidUpdate","prevProps","hover_index","setState","clearTimeout","setTimeout","render","previewPane_image_size","_jsxs","children","style","position","width","height","textAlign","_jsx","display","verticalAlign","setPreviewImage","ref","React","memo","thumbHeight","MuiRail","withStyles","theme","rail","backgroundColor","palette","grey","pointerEvents","railHotspot","top","cursor","_ref","classes","getRailProps","Fragment","className","MuiHandle","root","secondary","main","marginLeft","marginTop","border","borderRadius","whiteSpace","zIndex","_ref2","domain","min","max","handle","id","value","percent","getHandleProps","role","left","concat","MuiTrack","track","trackHotspot","_ref3","source","target","getTrackProps","MuiTickComponent","_ref4","tick","count","format","Typography","label","variant","defaultProps","d","BarChart","isHovering","barSelected","onLeave","bind","calculateHistogram","normalize","data","i","settings","currentProjection","push","metadata","sliderID","buckets","bucketsFinder","stepSize","targetBucket","Math","abs","length","bucketCount","parseFloat","toFixed","bucketList","Object","values","ratio","apply","round","barDataValues","hoverEffect","chartElement","barID","index","arr","Float32Array","fill","prevArr","barData","forEach","element","calculateProjection","color","selected","defaults","animation","markerData","Array","barDataSoll","histogram","barDataIst","barDataCalc","labels","map","val","datasets","type","barThickness","normalized","order","hoverBackgroundColor","options","responsive","interaction","mode","intersect","events","onClick","onHover","event","bgColor","native","plugins","legend","tooltip","enabled","scales","x","stacked","yAxes","beginAtZero","Bar","onMouseLeave","RangeSlider","arguments","range","update","inputValues","typeNumber","step","isToggleOn","handleClick","e","prevState","stopPropagation","changeSlider","onChangeSlider","Grid","container","item","xs","Slider","rootStyle","onUpdate","onChange","Rail","Handles","handles","Tracks","right","tracks","alignItems","justifyContent","marginRight","TextField","fullWidth","size","margin","inputProps","padding","evt","newState","Tooltip","title","info","Sliders","slidersAr","sliders","refSliders","filterData","filtered","createRef","filterVals","datafilter","componentName","filteredArr","list","idx","reduce","curr","SliderList","slider","SliderPane","sliderReset","console","log","filterImageAr","CustomResultProcessing","SimpleResultProcessing","filter","row","fieldOrLabel","operator","field","tryToGetFieldCategory","toLowerCase","indexOf","Filterbox","exportMetadata","filteredMetadata","obj","filterDataToExportCSV","document","getElementsByClassName","click","parseOK","query2","applyFilter","resetFilter","search","newData","process","query","customRenderCompletionItem","self","pick","fontWeight","fontSize","onParseOk","expressions","onParseError","ReactFilterBox","editorConfig","lineWrapping","ButtonGroup","Button","FilterPane","spacing","allFilter","InfoFields","infos","linkStyle","InfoList","uuid","substring","href","rel","wrap","InfoPane","ViewPane","handleChange","checked","handleChangeGrey","filterGrey","clusters","handleChangeCluster","option","Box","defaultValue","scaleMin","handleChangeScale","scaleMax","handleChangeZoom","MappingsPane","handleSelectAlgorithm","handleSelectDataset","v","selectAlgorithm","selectDataset","algorithm_options","algorithm_choice","dataset_options","selectedDataset","datasetInfo","Export","makePNG","async","canvasToImage","getElementById","_Fragment","marginBottom","CSVLink","filename","Projection","handleResize","camera","aspect","updateProjectionMatrix","renderer","setSize","current_scale","getScaleFromZ","z","d3_x","d3_y","y","resize_transform","d3","translate","scale","view","mount","d3_zoom","transform","updateProjection","ar","filterAr","ranges","ar_sliced","sprite_number","start","sprite_size","end","slice","c","points","scene","geometry","attributes","filteredActive","THREE","needsUpdate","updatePass2Shader","num","material","uniforms","greyTransparency","imageTransparency","updateClusterColors","clusterSelected","numVertices","clusterColors","total","clustersAr_sliced","cluster_unique","l","clusterId","cluster_int","random","cluster","clusterActive","loadTiles","tilesLoaded","init","pointsAr","addPoints","setupCamera","animate","getZFromScale","changeEmbeddings","sprite_side","tile_locations","n","sprite_dir","datasetIMG","src","img","createElement","new_choice","embedding_chunks","mappings","echunk","array","tween","TWEEN","to","easing","Linear","None","zoomScaler","input","clamp","scaleProj","rvFOV","degToRad","fov","tan","camera_z_position","fov_height","zoomHandler","d3_transform","k","set","new_size","point_group","camera_z_start","embeddings_data","vFOV","min_x","_","max_x","ys","min_y","max_y","max_x_from_center","m","max_y_from_center","far","scaleExtent","on","call","initial_scale","initial_transform","loader","textures","t","load","w","flipY","magFilter","vertices","embedding","vert","positionAr","offsetAr","clusterAr","addAttribute","texture_subsize","sprite_image_size","sprite_actual_size","floor","clusterList","clusterTypeSelected","includes","texture","repeat","vertex_shader","fragment_shader","vertexShader","fragmentShader","transparent","point_cloud","userData","sprite_index","add","addBlankHighlightPoints","hover_container","point","frustumCulled","visible","highlightPoint","digit_index","full_index","offsets","copyVector3sArray","offset","removeHighlights","highlight_container","highlights","remove","checkIntersects","mouse_position","previewPane_ctx","mouse_vector","mouseX","mouseY","mouseToThree","raycaster","setFromCamera","params","Points","threshold","intersects","intersectObjects","sorted_intersects","sortIntersectsByDistanceToRay","object","undefined","setHoverIndex","clearRect","fillRect","fillStyle","drawImage","error","handleMouse","domElement","node","clickOnImage","preserveDrawingBuffer","alpha","setClearColor","autoClear","appendChild","requestAnimationFrame","clear","parseInt","greyRenderTypeSelected","componentWillUnmount","removeChild","tileProgress","allTiles","CircularProgress","overflow","Layout","newArr","A","B","currentFilter","currentSearch","refProjection","current","toggleControl","collapsedControl","toggleObject","collapsedObject","ww","wh","previewPane_height","controlPane_height","filterPane_height","setDefaults","algorithm_name","window","addEventListener","setRenderer","addToUrl","p","changeDataset","innerWidth","innerHeight","previewPane_mount","offsetHeight","imageSmoothingEnabled","canvas","ctx","getContext","url_prefix","alt","removeEventListener","url","link_URL","open","err","main_style","background","general_style","lineHeight","displayNumb","maxHeight","controlMenu_mount","ProSidebar","collapsed","Menu","iconShape","MenuItem","FaAngleDoubleLeft","FaAngleDoubleRight","SubMenu","defaultOpen","icon","FaDatabase","grem","font_size","FaSlidersH","FaSearch","FaCloudDownloadAlt","FaRegImage","FaInfo","FaEye","FaQuestion","datasetDir","initPath","Data","dataset_dirs","defaultDataset","scaleEmbeddings","embeddings","queryString","location","urlParams","URLSearchParams","get","loadInit","loadConfig","path","loadSettings","loadBarData","loadMetadata","prepareMappings","ID","name","loadDataset","fetch","file","then","response","json","scaled_embeddings","paramName","navigate","toString","prepareDatasets","directory","choice","newDataset","default","foundInitDataset","floatColorConvertedArr","myColorFunction","rgb","withRouter","useParams","useNavigate","App","BrowserRouter","Routes","Route","exact","WithRouter","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89888434.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass PreviewPane extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dimensions: {},\n      imgURL: null,\n      previewImage: false,\n      timeoutId: null\n    };\n    // this.onImgLoad = this.onImgLoad.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.setPreviewPaneCanvas(this.side_canvas);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.hover_index !== prevProps.hover_index) {\n      this.setState({ previewImage: false });\n      clearTimeout(this.state.timeoutId);\n      const timeoutId = setTimeout(() => {\n        this.setState({ previewImage: true });\n      }, 100);\n      this.setState({ timeoutId });\n    }\n  }\n\n  render() {\n    let {\n      previewPane_image_size,\n    } = this.props;\n    // const {width, height} = this.state.dimensions;\n    // var imgWidth = \"auto\";\n    // var imgHeight = \"100%\";\n    // if (width >= height) {\n    //   imgWidth = \"100%\";\n    //   imgHeight = \"auto\"\n    // };\n\n    return (\n      <div>\n      <div style={{position: \"absolute\", width: previewPane_image_size, height: previewPane_image_size, textAlign: \"center\"}}>\n        <span style={{display: \"inline-block\", height: \"100%\", verticalAlign: \"middle\"}}/>\n\n      {this.state.previewImage === true ? this.props.setPreviewImage() : null}\n      \n      </div>\n        <canvas \n          ref={side_canvas => {\n            this.side_canvas = side_canvas\n          }}\n          width={previewPane_image_size}\n          height={previewPane_image_size}\n        />\n      </div>\n    )\n  }\n}\nexport default React.memo(PreviewPane)\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\n// Based on Material Design spec:\n// Styles by https://github.com/RafeSacks\n// https://material.io/design/components/sliders.html#spec\nconst trackHeight = 2;\nconst thumbHeight = 12;\n\n// *******************************************************\n// RAIL COMPONENT\n// *******************************************************\n\nconst muiRailStyle = theme => ({\n  rail: {\n    backgroundColor: theme.palette.grey[400],\n    width: \"100%\",\n    height: trackHeight,\n    position: \"absolute\",\n    pointerEvents: \"none\"\n  },\n  railHotspot: {\n    // backgroundColor: \"green\", // for debugging\n    width: \"100%\",\n    height: thumbHeight * 2, // Invisible hotspot same size as thumb\n    top: thumbHeight * -1,\n    position: \"absolute\",\n    cursor: \"pointer\"\n  }\n});\n\nfunction MuiRailComponent({ classes, getRailProps }) {\n  return (\n    <Fragment>\n      <div className={classes.railHotspot} {...getRailProps()} />\n      <div className={classes.rail} />\n    </Fragment>\n  );\n}\n\nMuiRailComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  getRailProps: PropTypes.func.isRequired\n};\n\nexport const MuiRail = withStyles(muiRailStyle)(MuiRailComponent);\n\n// *******************************************************\n// HANDLE COMPONENT\n// *******************************************************\n\nconst muiHandleStyle = theme => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n    marginLeft: thumbHeight * -0.5,\n    marginTop: thumbHeight * -0.5,\n    width: thumbHeight,\n    height: thumbHeight,\n    border: 0,\n    borderRadius: \"50%\", // circle\n    // boxShadow: \"1px 1px 1px 1px rgba(0, 0, 0, 0.2)\",\n    whiteSpace: \"nowrap\", // for child display inline-block to work\n    position: \"absolute\",\n    zIndex: 2,\n    cursor: \"pointer\"\n  }\n});\n\nfunction MuiHandleComponent({\n  domain: [min, max],\n  handle: { id, value, percent },\n  classes,\n  getHandleProps\n}) {\n  return (\n    <div\n      role=\"slider\"\n      aria-valuemin={min}\n      aria-valuemax={max}\n      aria-valuenow={value}\n      className={classes.root}\n      style={{ left: `${percent}%` }}\n      {...getHandleProps(id)}\n    />\n  );\n}\n\nMuiHandleComponent.propTypes = {\n  domain: PropTypes.array.isRequired,\n  handle: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  classes: PropTypes.object.isRequired,\n  getHandleProps: PropTypes.func.isRequired\n};\n\nexport const MuiHandle = withStyles(muiHandleStyle)(MuiHandleComponent);\n\n// *******************************************************\n// TRACK COMPONENT\n// *******************************************************\n\nconst muiTrackStyle = theme => ({\n  track: {\n    backgroundColor: theme.palette.secondary.main,\n    height: trackHeight,\n    position: \"absolute\",\n    zIndex: 1,\n    pointerEvents: \"none\"\n  },\n  trackHotspot: {\n    // backgroundColor: \"grey\", // for debugging\n    height: thumbHeight, // Invisible hotspot same size as thumb\n    top: thumbHeight * -0.5,\n    position: \"absolute\",\n    cursor: \"pointer\"\n  }\n});\n\nfunction MuiTrackComponent({ classes, source, target, getTrackProps }) {\n  const left = `${source.percent}%`;\n  const width = `${target.percent - source.percent}%`;\n\n  return (\n    <Fragment>\n      <div className={classes.track} style={{ left, width }} />\n      <div\n        className={classes.trackHotspot}\n        style={{ left, width }}\n        {...getTrackProps()}\n      />\n    </Fragment>\n  );\n}\n\nMuiTrackComponent.propTypes = {\n  source: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  target: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  classes: PropTypes.object.isRequired,\n  getTrackProps: PropTypes.func.isRequired\n};\n\nexport const MuiTrack = withStyles(muiTrackStyle)(MuiTrackComponent);\n\n// *******************************************************\n// TICK COMPONENT\n// *******************************************************\n\nconst muiTickStyle = theme => ({\n  tick: {\n    position: \"absolute\",\n    marginTop: 14,\n    width: 1,\n    height: 5,\n    backgroundColor: theme.palette.grey[400]\n  },\n  label: {\n    position: \"absolute\",\n    marginTop: 22,\n    textAlign: \"center\"\n  }\n});\n\nexport function MuiTickComponent({ classes, tick, count, format }) {\n  return (\n    <div>\n      <div className={classes.tick} style={{ left: `${tick.percent}%` }} />\n      <Typography\n        className={classes.label}\n        variant=\"caption\"\n        style={{\n          marginLeft: `${-(100 / count) / 2}%`,\n          width: `${100 / count}%`,\n          left: `${tick.percent}%`\n        }}\n      >\n        {format(tick.value)}\n      </Typography>\n    </div>\n  );\n}\n\nMuiTickComponent.propTypes = {\n  tick: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  format: PropTypes.func.isRequired\n};\n\nMuiTickComponent.defaultProps = {\n  format: d => d\n};\n\nexport const MuiTick = withStyles(muiTickStyle)(MuiTickComponent);\n","import React from \"react\";\nimport { Bar, defaults } from \"react-chartjs-2\";\n\nclass BarChart extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      // bgColor: this.props.color,\n      isHovering: false,\n      barSelected: null,\n    }\n    this.onLeave = this.onLeave.bind(this)\n    // this.showHideUpdate = this.showHideUpdate.bind(this);\n  }\n  \n\n  calculateHistogram(domain,normalize){\n    // Calculate frequency of data (adapted for float numbers)\n    let data = []\n    for(let i=0;i<this.props.settings[\"total\"];i++){\n      if(this.props.currentProjection[i]===0){\n        data.push(this.props.metadata[i][this.props.sliderID])\n      }\n    }\n    var buckets = {};\n    this.bucketsFinder = {};\n    const bucketCount = 50;\n    var stepSize;\n    if(domain[0] < 0){stepSize = (Math.abs(domain[0]) + Math.abs(domain[1])) / bucketCount}\n    else{stepSize = Math.abs((Math.abs(domain[0]) - Math.abs(domain[1])) / bucketCount)}\n    // Console.log(\"stepSize\", stepSize);\n    for (let i = 0; i < bucketCount; i++) {\n      buckets[i] = 0;\n    }\n    var targetBucket;\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] === domain[1]){targetBucket = bucketCount-1}\n        else {\n          // console.log(data[i])\n          targetBucket = ((data[i] - domain[0]) / stepSize) | 0\n        }\n        buckets[targetBucket] +=1;\n        // if (typeNumber === \"int\")\n        // this.bucketsFinder[parseInt(data[i])] = targetBucket;\n        // else\n        this.bucketsFinder[parseFloat(data[i]).toFixed(1)] = targetBucket;\n      }\n    var bucketList = Object.values(buckets)\n    if (normalize === true){\n      // Normalize data\n      var ratio = Math.max.apply(Math, bucketList) / 50;\n        for (i = 0; i < bucketList.length; i++) {\n          bucketList[i] = Math.round(bucketList[i] / ratio);\n        }\n      }\n    const barDataValues = [];\n    for (let i = 0; i < bucketList.length; i++) {\n      barDataValues.push(bucketList[i] || 0);\n    }\n    // console.log(barDataValues)\n    return barDataValues;\n  }\n\n\n  hoverEffect(chartElement) {\n    this.setState({isHovering: true});\n    if (chartElement[0]) {\n      var barID = chartElement[0].index;\n      var arr = new Float32Array( this.props.settings[\"total\"] ).fill(1);\n      // var arr = !this.props.filterImageAr;\n      var prevArr = this.props.currentProjection;\n      // console.log(this.props.barData[\"selections\"][barID]);?\n      this.props.barData[\"selections\"][barID].forEach(element => {\n        // if (prevArr[element] === 1) {\n          arr[element] = prevArr[element]\n        // }\n        // console.log(this.props.barData[\"selections\"][barID])\n      });\n      this.props.calculateProjection(arr, null, false);\n      this.setState({barSelected: barID});\n    }\n  }\n\n  onLeave() { \n    // this.setState(() => ({isHovering: false}), () => console.log(this.state));\n    this.setState({isHovering: false});\n    this.props.calculateProjection(this.props.currentProjection, null, false)\n  }\n\n  // componentDidUpdate(prevProps) {\n  //   if (this.props.currentProjection !== prevProps.currentProjection) {\n  //     this.barDataIst = this.calculateFrequencyOfData(this.props.domain,this.props.datafilter,false);\n  //   }\n  // }\n\n\n  render() {\n    const { barData, domain, color, selected } = this.props;\n    defaults.animation = false;\n    var markerData = Array(50).fill(0);\n    this.barDataSoll = barData.histogram;\n    this.barDataIst = this.calculateHistogram(domain,false);\n    const barDataCalc = {\n      labels: this.barDataSoll.map((val, i) => i),\n      datasets: [\n        {\n          label: \"barDataIst\",\n          type: 'bar',\n          barThickness: 5,\n          normalized: true,\n          order: 2,\n          backgroundColor: this.state.isHovering ? \"rgb(64, 64, 64)\" : markerData.map((val, i) =>\n            i === this.bucketsFinder[parseFloat(selected).toFixed(1)]\n              ? \"#f50057\"\n              : color\n            ),\n          hoverBackgroundColor: color,\n          // backgroundColor: this.state.bgColor,\n\n          // backgroundColor: this.barDataIst.map((val, i) =>\n          // i === this.bucketsFinder[parseFloat(selected).toFixed(1)]\n          //   ? \"rgb(245, 0, 87)\"\n          //   : this.state.isHovering ? \"rgb(64, 64, 64)\" : color\n          // ),\n          data: this.barDataIst\n          },\n\n          {\n            label: \"barDataSoll\",\n            type: 'bar',\n            barThickness: 5,\n            normalized: true,\n            order: 3,\n            backgroundColor: markerData.map((val, i) =>\n            i === this.bucketsFinder[parseFloat(selected).toFixed(1)]\n              ? \"#542032\"\n              : \"rgb(64, 64, 64)\"\n            ),\n            hoverBackgroundColor: \"rgb(64, 64, 64)\",\n\n          //   backgroundColor: this.barDataIst.map((val, i) =>\n          //   i === this.bucketsFinder[parseFloat(selected).toFixed(1)]\n          //     ? \"rgb(255, 153, 189)\"\n          //     : \"rgb(64, 64, 64)\"\n          // ),\n            // hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n            data: this.barDataSoll\n          }\n      ]\n    };\n\n    // console.log(\"selected\",this.bucketsFinder[parseFloat(selected).toFixed(1)] );\n    const options = {\n      responsive: true,\n      // pointStyle: 'triangle',\n      interaction: {\n        mode: 'index',\n        intersect: false\n        },\n      events: ['mouseleave', \"mousemove\", \"mouseout\", \"click\"], //, 'touchstart', 'touchmove'],\n      hoverBackgroundColor: color,\n      onClick: () => {\n            this.setState({isHovering: !this.state.isHovering});\n            this.props.calculateProjection(this.props.currentProjection, null, false)\n      },\n      onHover: (event, chartElement) => {\n        if (event.type === \"mousemove\" && this.state.isHovering && this.state.barSelected !== chartElement[0].index) {\n          this.setState({bgColor: \"rgb(64, 64, 64)\"});\n          this.hoverEffect(chartElement)\n          if (event.native.target.style.cursor !== 'ew-resize') {\n            event.native.target.style.cursor = 'ew-resize';\n          }\n        } else if (!this.state.isHovering && event.native.target.style.cursor !== 'pointer') {\n            event.native.target.style.cursor = 'pointer';\n          }\n      // if (this.state.isHovering){\n      //   ReactTooltip.hide(this.fooRef)\n      // }\n      },\n      plugins: {\n        legend: {\n          display: false\n        },\n        tooltip: {\n          enabled: false\n        }\n      },\n      scales: {\n        x: {\n          display: false,\n          stacked: true,\n          // position: 'bottom'\n        },\n        yAxes: {\n          beginAtZero: true,\n          display: false,\n          // stacked: true,\n          // ticks: {\n          //   min: 100\n          // }\n        }\n      }\n    };\n\n\n    return (\n      <Bar data={barDataCalc} height={62} options={options} onMouseLeave={this.onLeave} />\n      );\n  }\n}\n\nexport default React.memo(BarChart);\n","import React from \"react\";\nimport { Grid, TextField, Tooltip } from \"@material-ui/core\";\nimport { Slider, Rail, Handles, Tracks } from \"react-compound-slider\";\nimport { MuiRail, MuiHandle, MuiTrack } from \"./components\";\nimport BarChart from \"./BarChart\";\n\nclass RangeSlider extends React.Component {\n  state = {\n    domain: this.props.range,\n    update: this.props.range,\n    values: this.props.range,\n    inputValues: this.props.range,\n    typeNumber: this.props.typeNumber,\n    step: this.props.step,\n    color: this.props.color,\n    hover_index: this.props.hover_index,\n    isToggleOn: false,\n  };\n\n  handleClick = (e) => {\n    this.setState((prevState) => ({ isToggleOn: !prevState.isToggleOn }));\n    e.stopPropagation();\n  };\n\n  changeSlider = (values) => {\n    this.props.onChangeSlider(this.props.id, values);\n  };\n\n  render() {\n    const { domain, values, update, inputValues, color, typeNumber } = this.state;\n\n    return (\n      <Grid container>\n        <Grid item xs={12}>\n          <div style={{ height: \"90px\", width: \"270px\", marginTop: \"22px\" }}>\n            <BarChart\n              update={update}\n              domain={domain}\n              color={color}\n              barData={this.props.barData}\n              calculateProjection={this.props.calculateProjection}\n              settings={this.props.settings}\n              currentProjection={this.props.currentProjection}\n              sliderID={this.props.sliderID}\n              metadata={this.props.metadata}\n              selected={this.props.metadata[this.props.hover_index][this.props.sliderID]}\n            />\n\n            <Slider\n              mode={3}\n              step={typeNumber === \"int\" ? 1 : 0.01}\n              domain={domain}\n              color={color}\n              rootStyle={{\n                position: \"relative\",\n                width: \"100%\",\n              }}\n              onUpdate={(update) => {\n                this.setState({ update, inputValues: update });\n              }}\n              onChange={(values) => {\n                this.setState({ values });\n                this.changeSlider(update);\n              }}\n              values={values}\n            >\n              <Rail>\n                {({ getRailProps }) => <MuiRail getRailProps={getRailProps} />}\n              </Rail>\n              <Handles>\n                {({ handles, getHandleProps }) => (\n                  <div className=\"slider-handles\">\n                    {handles.map((handle) => (\n                      <MuiHandle\n                        key={handle.id}\n                        handle={handle}\n                        domain={domain}\n                        getHandleProps={getHandleProps}\n                      />\n                    ))}\n                  </div>\n                )}\n              </Handles>\n              <Tracks left={false} right={false}>\n                {({ tracks, getTrackProps }) => (\n                  <div className=\"slider-tracks\">\n                    {tracks.map(({ id, source, target }) => (\n                      <MuiTrack\n                        key={id}\n                        source={source}\n                        target={target}\n                        getTrackProps={getTrackProps}\n                      />\n                    ))}\n                  </div>\n                )}\n              </Tracks>\n            </Slider>\n            <Grid\n              container\n              alignItems=\"center\"\n              justifyContent=\"space-around\"\n              // style={{ marginTop: \"15px\" }}\n            >\n              <Grid\n                item\n                xs={3}\n                style={{\n                textAlign: \"right\",\n                border: \"solid 1px white\",\n                height:\"20px\",\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                // marginTop: '-12px',\n                }}\n              >\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"\"\n                  size=\"small\"\n                  width=\"8px\"\n                  value={inputValues[0]}\n                  margin=\"none\"\n                  inputProps={{\n                    style: {\n                      color:\"white\",\n                      padding: 0,\n                      marginLeft: 2\n                    }\n                  }}\n                  onChange={(evt) => {\n                    const value = evt.target.value;\n                    const newState = [value, inputValues[1]];\n                    this.setState({ inputValues: newState });\n                    if (value && value >= domain[0]) {\n                      this.setState({ values: newState });\n                    }\n                  }}\n                />\n              </Grid>\n              <Grid item xs={4} style={{ textAlign: \"center\",  marginTop: '-6px',}}>\n\n              <Tooltip title={<h3>{this.props.info}</h3>}>\n              <h3 style={{cursor: \"help\"}}>{this.props.title}</h3>\n              </Tooltip>\n              </Grid>\n              <Grid\n                item\n                xs={3}\n                style={{\n                textAlign: \"right\",\n                border: \"solid 1px white\",\n                height:\"20px\",\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                // marginTop: '-12px',\n                }}\n              >\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"\"\n                  size=\"small\"\n                  value={inputValues[1]}\n                  margin=\"none\"\n                  inputProps={{\n                    style: {\n                      color:\"white\",\n                      padding: 0,\n                      marginLeft: 2\n                    }\n                  }}\n                  // style={{ paddingTop: \"2px\", paddingBottom: \"8px\",color: \"white\" }}\n                  onChange={(evt) => {\n                    const value = evt.target.value;\n                    const newState = [inputValues[0], value];\n                    this.setState({ inputValues: newState });\n                    if (value && value <= domain[1] && value >= values[0]) {\n                      this.setState({ values: newState });\n                    }\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default React.memo(RangeSlider);\n","import React, { Component } from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport RangeSlider from \"./RangeSlider\";\n//import uuid from 'react-uuid';\n\nclass Sliders extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeSlider = this.changeSlider.bind(this);\n    // create references for each slider\n    this.slidersAr = []\n    for (let element in this.props.settings.sliders) {\n      this.slidersAr.push( this.props.settings.sliders[element].id );\n    }\n    this.refSliders = {}\n    this.filterData = {}\n    this.filtered = {}\n\n    for(let i=0;i<this.slidersAr.length;i+=1){\n      this.refSliders[this.slidersAr[i]] = React.createRef();\n      // Initial values non filter\n      let filterVals = []\n      for (let element in this.props.metadata) {\n        filterVals.push( this.props.metadata[element][this.slidersAr[i]] );\n      }\n      this.filterData[this.slidersAr[i]] = filterVals\n    }\n    this.state = {\n      datafilter: this.filterData\n    }\n\n  }\n\n  changeSlider(componentName, values) {\n    // console.log(componentName, values);\n    let {\n      metadata,\n    } = this.props\n    this.filtered[componentName] = new Float32Array( this.props.settings[\"total\"]).fill(0)\n    let filteredArr = new Float32Array( this.props.settings[\"total\"])\n\n    for(let element in metadata){\n      if(values[0] > metadata[element][componentName] ||\n          values[1] < metadata[element][componentName]\n          ){\n            this.filtered[componentName][element] = 1\n      }\n    }\n    let list = Object.values(this.filtered)\n    let arr = filteredArr.map((x, idx) => list.reduce((max, curr) => max + curr[idx], 0));\n    this.props.calculateProjection(arr, \"filter\", true)\n  }\n\n\n  render() {\n    let {\n      hover_index,\n      settings,\n      barData,\n    } = this.props;\n\n    const slidersSettings = settings['sliders'];\n    const SliderList = slidersSettings.map((slider) =>\n    <Grid item>\n      <RangeSlider\n        ref={this.refSliders[slider['id']]}\n        datafilter={this.state.datafilter[slider['id']]}\n        title={slider['title']}\n        id={slider['id']}\n        info={slider['info']}\n        typeNumber={slider['typeNumber']}\n        color={slider['color']}\n        onChangeSlider={this.changeSlider}\n        hover_index={hover_index}\n        barData={barData[slider['id']]}\n        calculateProjection={this.props.calculateProjection}\n        currentProjection={this.props.currentProjection}\n        settings={settings}\n        sliderID={slider['id']}\n        metadata={this.props.metadata}\n        range={[slider['min'],slider['max']]}\n        />\n      </Grid>\n    )\n\n    return (\n      <Grid container style={{ marginLeft: \"6px\"}}>\n        <Grid item >\n        {SliderList}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default Sliders\n","import React, { Component } from 'react'\nimport Sliders from \"./Sliders/Sliders\";\n\nclass SliderPane extends Component {\n  constructor(props) {\n    super(props);\n    this.sliderReset = this.sliderReset.bind(this);\n  }\n\n  sliderReset() {\n    console.log(\"reset range sliders\");\n  }\n\n  render() {\n    let {\n      metadata,\n      hover_index,\n    } = this.props;\n\n    return (\n      <Sliders\n        metadata={metadata}\n        settings={this.props.settings}\n        hover_index={hover_index}\n        barData={this.props.barData}\n        filterImageAr={this.props.filterImageAr}\n        calculateProjection={this.props.calculateProjection}\n        currentProjection={this.props.currentProjection}\n      />\n    )\n  }\n}\n\nexport default React.memo(SliderPane)","import React, { Component } from 'react'\nimport  _ from \"lodash\";\nimport { Button, ButtonGroup } from \"@material-ui/core\";\nimport ReactFilterBox, {SimpleResultProcessing, GridDataAutoCompleteHandler} from \"react-filter-box\";\nimport \"./filter-box.css\";\n\n//Extend this class to add your custom operator\n// class CustomAutoComplete extends GridDataAutoCompleteHandler {\n//     // Override this method to add new your operator\n//     needOperators(parsedCategory) {\n//         var result = super.needOperators(parsedCategory);\n//         return result.concat([\"startsWith\"]);\n//     }\n// }\n\nclass CustomResultProcessing extends SimpleResultProcessing {\n    // Override this method to add your handler for startsWith operator\n    filter(row, fieldOrLabel, operator, value){\n        var field = this.tryToGetFieldCategory(fieldOrLabel);\n        switch(operator){\n            case \"==\": return row[field] === value;\n            case \"!=\": return row[field] !== value;\n            case \"contains\": return row[field] && row[field].toLowerCase().indexOf(value.toLowerCase()) >=0;\n            case \"!contains\": return row[field] && row[field].toLowerCase().indexOf(value.toLowerCase()) <0;\n            default: return false;\n        }\n    }\n    }\n\nclass Filterbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            parseOK: true,\n            query2: {}\n        };\n        this.applyFilter = this.applyFilter.bind(this);\n        this.resetFilter = this.resetFilter.bind(this);\n        this.options = this.props.settings.search;\n        // this.customAutoComplete = new CustomAutoComplete(this.props.metadata,this.options);\n        // this.editorConfig = {\n        //     direction: \"rtl\"\n        // };\n    }\n\n    applyFilter() {\n        var newData = new CustomResultProcessing(this.options).process(this.props.metadata, this.state.query2);\n        var arr = new Float32Array(this.props.settings[\"total\"]).fill(1);\n        newData.forEach(element => {\n            arr[element[\"index\"]] = 0;\n        });     \n        this.props.calculateProjection(arr, \"search\", true);\n    }\n\n    resetFilter() {\n        this.setState({ query: null, query2: '' });\n        var arr = new Float32Array(this.props.settings[\"total\"]).fill(0);\n        this.props.calculateProjection(arr, \"search\", true);\n    }\n\n    //customer your rendering item in auto complete\n    customRenderCompletionItem(self, data, pick) {\n        var className = `hint-value cm-${data.type}`\n        return <div className={className} >\n                    <span style={{ fontWeight: \"bold\" }}>{data.value}</span>\n                    <span style={{color:\"gray\", fontSize:10}}> [{data.type}] </span>\n                </div>\n    }\n\n    onParseOk(expressions) {\n        this.setState({ parseOK: false });\n        this.setState({ query2: expressions });\n        // this.applyFilter(expressions);\n    }\n\n    onParseError(expressions) {\n        this.setState({ parseOK: true });\n    }\n    \n    exportMetadata = () => {\n        var filteredMetadata = [];\n        for (let i = 0; i < this.props.metadata.length; i++) {\n          if (this.props.currentProjection[i] === 0) {\n            var obj = this.props.metadata[i];\n            filteredMetadata.push(obj);\n          }\n        }\n        this.setState(\n          { filterDataToExportCSV: filteredMetadata },\n          () => {\n            document.getElementsByClassName('hidden')[0].click();\n          }\n        );\n      };\n      \n\n    render() {\n        return (\n        <div className=\"main-container\">\n            <ReactFilterBox\n                // autoCompleteHandler = {this.customAutoComplete}\n                customRenderCompletionItem = {this.customRenderCompletionItem.bind(this) }\n                query={this.state.query}\n                data={this.props.metadata}\n                options={this.options}\n                onParseOk={this.onParseOk.bind(this) }\n                onParseError={this.onParseError.bind(this) }\n                editorConfig={{ lineWrapping: true }}\n            />\n\n            <ButtonGroup variant=\"contained\">\n            <Button onClick={this.applyFilter}>apply</Button>\n            <Button onClick={this.resetFilter}>reset</Button>\n            </ButtonGroup>\n\n        </div>\n        )\n    }\n}\n\nexport default Filterbox","import React, { Component } from 'react'\nimport { Grid } from \"@material-ui/core\";\n//import _ from \"lodash\";\nimport Filterbox from \"./QueryFilter\";\n\nclass FilterPane extends Component {\n\n  render() {\n    let {\n      metadata,\n      settings,\n    } = this.props\n\n    return (\n      <Grid container spacing={2}>\n        <Filterbox \n          calculateProjection={this.props.calculateProjection}\n          settings={settings}\n          metadata={metadata}\n          currentProjection={this.props.currentProjection}\n          allFilter={this.props.allFilter}\n        />\n      </Grid>\n    )\n  }\n}\n\nexport default React.memo(FilterPane)","import React, { Component, Fragment } from 'react'\nimport { Grid } from \"@material-ui/core\";\nimport uuid from 'react-uuid';\n\nclass InfoFields extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        let {\n            metadata,\n            hover_index,\n            infos,\n        } = this.props;\n\n        const linkStyle = {\n            color: 'CornflowerBlue'\n        };\n        \n\n        const InfoList = infos.map((info) => \n            <Fragment>\n                <Grid key={uuid()} item xs={4}>\n                    {info}:\n                </Grid>\n                <Grid key={uuid()} item xs={8}>   \n                    {( typeof  metadata[hover_index][info] === 'string' && metadata[hover_index][info].length>4 && metadata[hover_index][info].substring(0, 4)==='http')  ? <a href={metadata[hover_index][info]} target=\"_blank\" rel=\"noreferrer\" style={linkStyle}>{metadata[hover_index][info].substring(8,30)}...</a>: metadata[hover_index][info]}\n                </Grid>\n            </Fragment>\n        )\n\n        return (\n            <Grid key={uuid()} container justifyContent=\"space-between\" spacing={1} wrap=\"wrap\">    \n                {/* <Grid key={uuid()} item xs={12}>   \n                    <b>{metadata[hover_index].Title}</b>\n                </Grid> */}\n                {InfoList}\n\n            </Grid>\n        );\n    }\n}\n\nexport default InfoFields","import React, { Component } from 'react'\nimport InfoFields from \"./InfoFields\";\n\nclass InfoPane extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dimensions: {},\n    };\n  }\n\n  render() {\n    let {\n      hover_index,\n      infos,\n      metadata,\n    } = this.props;\n\n    return (\n      <InfoFields\n      metadata={metadata}\n      hover_index={hover_index}\n      infos={infos}\n      />\n    )\n\n  }\n}\n\nexport default React.memo(InfoPane)\n","import React, { Component } from 'react'\nimport { Grid, Slider, Box } from \"@material-ui/core\";\n\nclass ViewPane extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dimensions: {},\n      checked: this.props.filterGrey\n    }\n  }\n\n  handleChange = () => {\n    this.setState(prevState => ({\n      checked: !prevState.checked\n    }));\n    this.props.handleChangeGrey(this.state.checked ? 1 : 0);\n  }\n\n  render() {\n    let {\n      clusters\n    } = this.props\n\n    return (\n      <Grid container spacing={1}>\n        \n          \n          <Grid item xs={4}>\n            clusters:\n          </Grid>\n          <Grid item xs={8}>\n            <select onChange={this.props.handleChangeCluster}>\n              <option key=\"0\" value=\"disabled\">-</option>\n              {clusters['clusterList'].map((option, index) => (\n              <option key={option} value={option}>\n                  {option.toLowerCase()}\n              </option>\n              ))}\n            </select> \n          </Grid>\n          <Grid item xs={4}>\n            size (out):\n          </Grid>\n          <Grid item xs={8}>\n          <Box height={10}>\n          <Slider\n            size=\"small\"\n            defaultValue={this.props.scaleMin}\n            min={3}\n            max={60}\n            onChange={this.props.handleChangeScale}\n          />\n          </Box>\n          </Grid>\n          <Grid item xs={4}>\n          size (in):\n          </Grid>\n          <Grid item xs={8}>\n          <Box height={10}>\n          <Slider\n            size=\"small\"\n            defaultValue={this.props.scaleMax}\n            min={3}\n            max={120}\n            onChange={this.props.handleChangeZoom}\n          />\n          </Box>\n          </Grid>\n\n          <Grid item xs={11}>\n          show filtered-out items (slower):\n          </Grid>\n          <Grid item xs={1}>\n            <input type=\"checkbox\" \n            checked={this.state.checked} \n            onChange={this.handleChange}\n            />\n          </Grid>\n\n      </Grid>\n    )\n  }\n}\n\nexport default React.memo(ViewPane)\n","import React, { Component } from 'react'\nimport { Grid } from \"@material-ui/core\";\n\nclass MappingsPane extends Component {\n  constructor(props) {\n    super(props)\n    this.handleSelectAlgorithm = this.handleSelectAlgorithm.bind(this);\n    this.handleSelectDataset = this.handleSelectDataset.bind(this);\n  }\n\n  handleSelectAlgorithm(e) {\n    let v = e.target.value;\n    this.props.selectAlgorithm(v);\n  }\n\n  handleSelectDataset(e) {\n    let v = e.target.value;\n    this.props.selectDataset(v);\n  }\n\n  render() {\n    let {\n      algorithm_options,\n      algorithm_choice,\n      dataset_options,\n      selectedDataset,\n      datasetInfo\n    } = this.props;\n\n    return (\n      \n      <Grid container spacing={1}>\n          <Grid item xs={4}>\n            Dataset:\n          </Grid>\n          <Grid item xs={8}>\n            <select className=\"full-width\"\n              onChange={this.handleSelectDataset}\n              value={selectedDataset}\n            >\n              {dataset_options.map((option, index) => (\n              <option key={option} value={option}>\n                  {option}\n              </option>\n              ))}\n            </select>\n          </Grid>\n\n          <Grid item xs={4}>\n            Projection:\n          </Grid>\n          <Grid item xs={8}>\n            <select className=\"full-width\"\n              onChange={this.handleSelectAlgorithm}\n              value={algorithm_options[algorithm_choice]}\n            >\n              {algorithm_options.map((option, index) => (\n              <option key={option} value={option}>\n                  {option}\n              </option>\n              ))}\n            </select>\n          </Grid>\n          <Grid item xs={12}>\n          <p className=\"info\">{datasetInfo}</p>\n          </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default React.memo(MappingsPane)","\nimport React, { Component } from 'react'\nimport { Button } from \"@material-ui/core\";\nimport { CSVLink } from \"react-csv\";\nimport canvasToImage from 'canvas-to-image';\n\n\nclass Export extends Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        filterDataToExportCSV:[],\n    }\n    }\n\n    makePNG = async () => {\n        console.log('download projection area as png')\n        canvasToImage(document.getElementById(\"threeCanvas\"));\n      }\n\n  \n\nrender() {\n    let {\n        metadata,\n        currentProjection\n      } = this.props;\n\n    return (\n        <><div style={{ marginBottom: \"12px\" }}>\n        <CSVLink \n            data={this.state.filterDataToExportCSV} \n            filename={\"CSN_filtered_metadata.csv\"} \n            target=\"_blank\"\n            onClick={() => {\n            let filteredMetadata = [];\n            for (let i=0;i<metadata.length;i++) {\n                if(currentProjection[i]===0){\n                var obj = metadata[i];\n                filteredMetadata.push(obj)\n                }\n            }\n            this.setState({filterDataToExportCSV: filteredMetadata});\n            }}                \n            >\n            <Button variant=\"contained\" fullWidth >Download metadata CSV</Button>\n            </CSVLink>\n            </div><div>\n                <Button variant=\"contained\" fullWidth onClick={this.makePNG}>Download projection PNG</Button>\n            </div></>\n\n    )\n\n\n}\n  \n    // // Release memory of export filter metadata\n    // if(this.state.filterDataToExportCSV.length>0) this.setState({filterDataToExportCSV: []});\n\n\n}\n\nexport default React.memo(Export)\n\n","import React, { Component } from 'react'\nimport * as THREE from 'three'\nimport * as _ from 'lodash'\nimport * as d3 from 'd3'\nimport * as TWEEN from '@tweenjs/tween.js'\nimport { CircularProgress } from \"@material-ui/core\";\n\nclass Projection extends Component {\n  constructor(props) {\n    super(props)\n    this.loadTiles()\n    this.state = {\n      tilesLoaded: 0,\n      view: null\n    }\n    this.init = this.init.bind(this)\n    this.pointsAr = []\n    this.addPoints = this.addPoints.bind(this)\n    this.handleResize = this.handleResize.bind(this)\n    this.setupCamera = this.setupCamera.bind(this)\n    this.animate = this.animate.bind(this)\n    this.getScaleFromZ = this.getScaleFromZ.bind(this)\n    this.getZFromScale = this.getZFromScale.bind(this)\n    this.changeEmbeddings = this.changeEmbeddings.bind(this)\n  }\n\n  loadTiles(){ \n    this.sprite_size = this.props.settings.sprite_side * this.props.settings.sprite_side\n    this.tile_locations = [...Array(this.props.settings.sprite_number)].map(\n      (n, i) => `${process.env.PUBLIC_URL}/datasets/${this.props.settings.sprite_dir}/tile_${i}.png`\n    )  \n    this.datasetIMG = this.tile_locations.map(src => {\n      let img = document.createElement('img')\n      img.src = src\n      return img\n    })\n  }\n\n  //changeEmbeddings(prev_choice, new_choice) {\n  changeEmbeddings(new_choice) {\n    let ranges = []\n    for (let i = 0; i < this.props.settings.sprite_number; i++) {\n      let start = i * this.sprite_size\n      let end = (i + 1) * this.sprite_size\n      if (i === this.props.settings.sprite_number - 1) end = this.props.settings.sprite_number * this.sprite_size\n      ranges.push([start, end])\n    }\n\n    let embedding_chunks = ranges.map(range =>\n      this.props.mappings[new_choice].slice(\n        range[0],\n        range[1]\n      )\n    )\n\n    for (let c = 0; c < this.props.settings.sprite_number; c++) {\n      let echunk = embedding_chunks[c]\n\n      let points = this.scene.children[0].children[c]\n      let numVertices = echunk.length\n\n      let position = points.geometry.attributes.position.array\n      let target = new Float32Array(numVertices * 3)\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 3) {\n        let x = echunk[i][0]\n        let y = echunk[i][1]\n        let z = 0\n        target[index] = x\n        target[index + 1] = y\n        target[index + 2] = z\n      }\n\n      let tween = new TWEEN.Tween(position)\n        .to(target, 1000)\n        .easing(TWEEN.Easing.Linear.None)\n      tween.onUpdate(function() {\n        points.geometry.attributes.position = new THREE.BufferAttribute(\n          position,\n          3\n        )\n        points.geometry.attributes.position.needsUpdate = true // required after the first render\n      })\n      tween.start();\n    }\n  }\n\n  zoomScaler(input) {\n    let scaleProj = d3\n    .scaleLinear()\n    .domain([20,0])\n    .range([this.props.scaleMin, this.props.scaleMax])\n    .clamp(true);\n    return scaleProj(input);\n  }\n\n  getZFromScale(scale) {\n    let rvFOV = THREE.Math.degToRad(this.camera.fov);\n    let scale_height = this.props.height / scale;\n    let camera_z_position = scale_height / (2 * Math.tan(rvFOV / 2));\n    return camera_z_position;\n  }\n\n  getScaleFromZ(camera_z_position) {\n    let rvFOV = THREE.Math.degToRad(this.camera.fov);\n    let half_fov_height = Math.tan(rvFOV / 2) * camera_z_position;\n    let fov_height = half_fov_height * 2;\n    let scale = this.props.height / fov_height;\n    return scale;\n  }\n\n  handleResize = (width, height) => {\n    this.camera.aspect = width / height;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(width, height);\n    let current_scale = this.getScaleFromZ(this.camera.position.z);\n    let d3_x = -(this.camera.position.x * current_scale) + this.props.width / 2;\n    let d3_y = this.camera.position.y * current_scale + this.props.height / 2;\n    var resize_transform = d3.zoomIdentity\n      .translate(d3_x, d3_y)\n      .scale(current_scale);\n    let view = d3.select(this.mount);\n    this.d3_zoom.transform(view, resize_transform);\n  }\n\n  zoomHandler() {\n    let d3_transform = d3.event.transform;\n    let scale = d3_transform.k;\n    let x = -(d3_transform.x - this.props.width / 2) / scale;\n    let y = (d3_transform.y - this.props.height / 2) / scale;\n    let z = this.getZFromScale(scale);\n    this.camera.position.set(x, y, z);\n    // point size scales at end of zoom\n    let new_size = this.zoomScaler(z);\n    let point_group = this.scene.children[0].children;\n    for (let c = 0; c < point_group.length; c++) {\n      point_group[c].material.uniforms.size.value = new_size;\n    }\n  }\n\n  setupCamera() {\n    let { width, height, embeddings_data } = this.props\n\n    let vFOV = this.camera.fov\n    let rvFOV = THREE.Math.degToRad(vFOV)\n\n    let xs = embeddings_data.map(e => e[0])\n    let min_x = _.min(xs)\n    let max_x = _.max(xs)\n    let ys = embeddings_data.map(e => e[1])\n    let min_y = _.min(ys)\n    let max_y = _.max(ys)\n\n    let max_x_from_center = _.max([min_x, max_x].map(m => Math.abs(m)))\n    let max_y_from_center = _.max([min_y, max_y].map(m => Math.abs(m)))\n\n    let max_center = Math.max(max_x_from_center, max_y_from_center)\n\n    let camera_z_start\n    // if (data_aspect > aspect) {\n    //   // console.log(\"width is limiter\");\n    //   // camera_z_start = max_x_from_center / Math.tan(rvFOV / 2) / aspect\n    // } else {\n    //   // console.log(\"height is limiter\");\n    //   // camera_z_start = max_y_from_center / Math.tan(rvFOV / 2)\n    // }\n\n    camera_z_start = max_center / Math.tan(rvFOV / 2)\n\n    let far = camera_z_start * 1.25\n    this.camera.far = far\n    this.camera.position.z = camera_z_start * 1.1\n\n    // set up zoom\n    this.d3_zoom = d3\n      .zoom()\n      .scaleExtent([this.getScaleFromZ(far - 1), this.getScaleFromZ(0.1)])\n      .on('zoom', this.zoomHandler.bind(this))\n\n    let view = d3.select(this.mount)\n    this.view = view\n    view.call(this.d3_zoom)\n    let initial_scale = this.getScaleFromZ(this.camera.position.z)\n    var initial_transform = d3.zoomIdentity\n      .translate(width / 2, height / 2)\n      .scale(initial_scale)\n    this.d3_zoom.transform(view, initial_transform)\n    this.setState({ view: view })\n  }\n\n  addPoints() {\n    let { embeddings_data,metadata } = this.props;\n\n    // split embeddings and labels into chunks to match sprites\n    let ranges = [];\n    for (let i = 0; i < this.props.settings.sprite_number; i++) {\n      let start = i * this.sprite_size;\n      let end = (i + 1) * this.sprite_size;\n      if (i === this.props.settings.sprite_number - 1) end = this.props.settings.sprite_number * this.sprite_size;\n      ranges.push([start, end]);\n    }\n    let embedding_chunks = ranges.map(range =>\n      embeddings_data.slice(range[0], range[1])\n    );\n\n    // load the textures\n    let loader = new THREE.TextureLoader();\n    this.textures = this.tile_locations.map(l => {\n      let t = loader.load(l,\n        function ( w ) {\n          this.setState({ tilesLoaded: this.state.tilesLoaded+1 });\n        }.bind(this)\n      )\n      t.flipY = false\n      t.magFilter = THREE.NearestFilter\n      return t\n    })  \n    let geometry;\n    let point_group = new THREE.Group();\n    for (let c = 0; c < this.props.settings.sprite_number; c++) {\n      let echunk = embedding_chunks[c];\n      //let lchunk = label_chunks[c]\n\n      let vertices = [];\n      for (let v = 0; v < echunk.length; v++) {\n        let embedding = echunk[v];\n        let vert = new THREE.Vector3(embedding[0], embedding[1], 0);\n        vertices[v] = vert;\n      }\n\n      geometry = new THREE.BufferGeometry();\n\n      let numVertices = vertices.length;\n      // console.log(\"numVertices -->\",numVertices)\n      let positionAr = new Float32Array(numVertices * 3);\n      let offsetAr = new Float32Array(numVertices * 2);\n      let clusterAr = new Float32Array(numVertices * 3);\n      let filterAr = new Float32Array(numVertices );\n      //let clustersActive = new Float32Array(numVertices );\n      geometry.addAttribute('position', new THREE.BufferAttribute(positionAr, 3));\n      geometry.addAttribute('offset', new THREE.BufferAttribute(offsetAr, 2));\n      geometry.addAttribute('filter', new THREE.BufferAttribute(filterAr, 1));\n      geometry.addAttribute('cluster', new THREE.BufferAttribute(clusterAr, 3));\n      //geometry.addAttribute('clusterActive', new THREE.BufferAttribute(clustersActive, 1));\n\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 3) {\n        let x = echunk[i][0];\n        let y = echunk[i][1];\n        let z = 0;\n        positionAr[index] = x;\n        positionAr[index + 1] = y;\n        positionAr[index + 2] = z;\n      }\n      // geometry.attributes.position.copyVector3sArray(vertices)\n\n      let texture_subsize = 1 / this.props.settings.sprite_side;\n\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 2) {\n        let x = ((i % this.props.settings.sprite_side) * this.props.settings.sprite_image_size) / this.props.settings.sprite_actual_size\n        let y =\n          (Math.floor(i / this.props.settings.sprite_side) * this.props.settings.sprite_image_size) / this.props.settings.sprite_actual_size\n        offsetAr[index] = x;\n        offsetAr[index + 1] = y;\n      }\n      if (this.props.settings.clusters.clusterList) {\n        // Todo: connect cluster the array\n        let clusterSelected = this.props.clusterTypeSelected;\n        let clusterColors = this.props.settings.clusters.clusterColors;\n        // console.log(\"clusterSelected\",clusterSelected)\n        for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 1) {\n          // Images disable when are not visible\n          filterAr[index] = 0.0;// default value to show all images\n\n          // Clusters visualization\n\n          if( clusterSelected !== \"-\" && this.props.settings.clusters.clusterList.includes(clusterSelected) ){ \n              let clusterId = metadata[index][clusterSelected];\n              if(clusterId >= clusterColors.length){\n                clusterAr[index*3] = 1.0;\n                clusterAr[index*3 + 1] = 1.0;\n                clusterAr[index*3 + 2] = 1.0;\n              }else{\n                clusterAr[index*3] = clusterColors[clusterId][0];\n                clusterAr[index*3 + 1] = clusterColors[clusterId][1];\n                clusterAr[index*3 + 2] = clusterColors[clusterId][2];\n              }\n          }\n      }\n    }\n      // uniforms\n      let uniforms = {\n        texture: { value: this.textures[c] },\n        repeat: { value: new THREE.Vector2(texture_subsize, texture_subsize) },\n        size: { value: this.props.settings.sprite_image_size },\n        greyTransparency:{ value:0.1},\n        imageTransparency:{ value:1.0},\n        clusterActive:{ value:0.0}\n      };\n\n      let vertex_shader = `\n        attribute vec2 offset;\n        varying vec2 vOffset;\n        attribute vec3 cluster;\n        varying vec3 vCluster;\n        attribute float filteredActive;\n        varying float vFilteredActive;\n        uniform float clusterActive;\n        varying float vClusterActive;\n        uniform float size;\n        uniform float greyTransparency;\n        varying float vGreyTransparency;\n        uniform float imageTransparency;\n        varying float vImageTransparency;\n\n        void main() {\n          vOffset = offset;\n          vFilteredActive = filteredActive;\n          vCluster = cluster;\n          vClusterActive = clusterActive;\n          vGreyTransparency = greyTransparency;\n          vImageTransparency = imageTransparency;\n          gl_PointSize = size;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`;\n\n      let fragment_shader = `\n        uniform sampler2D texture;\n        uniform vec2 repeat;\n        varying vec2 vOffset;\n        varying vec3 vCluster;\n        varying float vClusterActive;\n        varying float vFilteredActive;\n        varying float vGreyTransparency;\n        varying float vImageTransparency;\n        void main() {\n          vec2 uv = vec2( gl_PointCoord.x, gl_PointCoord.y );\n          vec4 tex = texture2D( texture, uv * repeat + vOffset );\n          // make transparent images\n          if ( tex.a < 0.003 ) discard;\n\n          // Display clusters\n          vec4 replace_color = vec4(vCluster,1.0);\n          vec4 default_border_color = vec4(0.00392156863,0.00392156863,0.00392156863,0.0);\n          vec4 diff = tex - default_border_color;\n          float equality = float(dot(diff,diff) < 0.99 && vClusterActive > 0.9);\n          tex = mix( tex, replace_color, equality);\n           \n          // make transparent images\n          tex = mix( tex,  vec4(0.0,0.0,0.0,0.0), vImageTransparency);\n\n          // Grey images filter our selection \n          vec4 filterout_color = vec4(0.3,0.3,0.3,vGreyTransparency);\n          float filterout_equality = float(vFilteredActive > 0.9);\n          tex = mix( tex, filterout_color, filterout_equality );\n          gl_FragColor = tex; //* vec4(vColor, 1.0);\n        }`;\n\n      // material\n      let material = new THREE.ShaderMaterial({\n        uniforms: uniforms,\n        vertexShader: vertex_shader,\n        fragmentShader: fragment_shader,\n        transparent: true\n      });\n\n      // point cloud\n      let point_cloud = new THREE.Points(geometry, material);\n      point_cloud.userData = { sprite_index: c };\n      this.pointsAr.push(point_cloud);\n      // console.log(\"new points\")\n      point_group.add(point_cloud);\n    }\n    this.scene.add(point_group);\n  }\n\n  addBlankHighlightPoints() {\n    let hover_container = new THREE.Group();\n    this.scene.add(hover_container);\n\n    let vert = new THREE.Vector3(0, 0, 0);\n    let vertices = [vert];\n    let geometry = new THREE.BufferGeometry();\n    let numVertices = vertices.length;\n    var positionAr = new Float32Array(numVertices * 3); // 3 coordinates per point\n    var offsetAr = new Float32Array(numVertices * 2); // 2 coordinates per point\n    geometry.addAttribute('position', new THREE.BufferAttribute(positionAr, 3));\n    geometry.addAttribute('offset', new THREE.BufferAttribute(offsetAr, 2));\n\n    // all the attributes will be filled on hover\n    let texture_subsize = 1 / this.props.settings.sprite_side;\n\n    // uniforms\n    let uniforms = {\n      texture: { value: this.textures[0] },\n      repeat: { value: new THREE.Vector2(texture_subsize, texture_subsize) },\n      size: { value: 120.0 }, //56\n    };\n\n    let vertex_shader = `\n        attribute vec2 offset;\n        varying vec2 vOffset;\n        uniform float size;\n        void main() {\n          vOffset = offset;\n          gl_PointSize = size;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`;\n\n    let fragment_shader = `\n        uniform sampler2D texture;\n        uniform vec2 repeat;\n        varying vec2 vOffset;\n        void main() {\n          vec2 uv = vec2( gl_PointCoord.x, gl_PointCoord.y );\n          vec4 tex = texture2D( texture, uv * repeat + vOffset );\n          gl_FragColor = tex;\n        }`;\n\n    // material\n    var material = new THREE.ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: vertex_shader,\n      fragmentShader: fragment_shader,\n      transparent: true,\n    });\n\n    let point = new THREE.Points(geometry, material);\n    point.frustumCulled = false;\n\n    this.scene.children[1].visible = false;\n    this.scene.children[1].add(point);\n  }\n\n  // filter images - update color of images to get inactive (grey) or active images\n  updateProjection=(ar)=>{\n    this.filterAr = ar;\n    let ranges = [];\n    let ar_sliced = [];\n    for (let i = 0; i < this.props.settings.sprite_number; i++) {\n      let start = i * this.sprite_size;\n      let end = (i + 1) * this.sprite_size;\n      if (i === this.props.settings.sprite_number - 1) end = this.props.settings.sprite_number * this.sprite_size;\n      ranges.push([start, end]);\n      ar_sliced.push(ar.slice(start, end));\n    }\n    // \n    for (let c = 0; c < this.props.settings.sprite_number; c++) {\n      let points = this.scene.children[0].children[c];\n      points.geometry.attributes.filteredActive = new THREE.BufferAttribute(\n        ar_sliced[c],\n        1\n      );\n      points.geometry.attributes.filteredActive.needsUpdate = true;\n    }\n    // let point = this.scene.children[0].children[0]\n    // console.log(point.geometry);\n  }\n\n  updatePass2Shader=(num)=>{\n    for (let c = 0; c < this.props.settings.sprite_number; c++) {\n      let points = this.scene.children[0].children[c];\n      if(num===1){\n        points.material.uniforms.greyTransparency.value = 0.1;\n        points.material.uniforms.greyTransparency.needsUpdate = true;\n        points.material.uniforms.imageTransparency.value = 1.0;\n        points.material.uniforms.imageTransparency.needsUpdate = true;\n      }\n      if(num===2){\n        points.material.uniforms.greyTransparency.value = 0.0;\n        points.material.uniforms.greyTransparency.needsUpdate = true;\n        points.material.uniforms.imageTransparency.value = 0.0;\n        points.material.uniforms.imageTransparency.needsUpdate = true;\n      }\n    }\n  }\n\n  updateClusterColors=(clusterSelected)=>{\n    console.log('updateClusterColors',clusterSelected);\n    \n    let numVertices =  this.props.metadata.length;//this.props.settings.sprite_number * this.sprite_size;\n    console.log(\"clusterSelected:\",clusterSelected, \"numVertices Update -->\",numVertices, ' metadata.length:', this.props.metadata.length)\n    let clusters = new Float32Array(numVertices * 3);\n    //let clustersActive = new Float32Array(numVertices );\n    let clusterColors = this.props.settings.clusters.clusterColors;\n    console.log(numVertices,clusterSelected !==\"-\",this.props.settings.total,clusterColors);\n    \n    let ranges = [];\n    // let clustersActiveAr_sliced = [];\n    let clustersAr_sliced = [];\n\n    if( clusterSelected !==\"disabled\" ){\n      let cluster_unique = [];\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 1) {\n          let clusterId = this.props.metadata[index][clusterSelected];\n          // check if clusterId is in cluster_unique\n          if(cluster_unique.indexOf(clusterId) === -1){\n            cluster_unique.push(clusterId);\n          }\n          // get the index of the clusterId in cluster_unique\n          let cluster_int = cluster_unique.indexOf(clusterId);\n          if(cluster_int>=clusterColors.length){\n            // make a random color\n            clusters[index*3] = Math.random();\n            clusters[index*3 + 1] = Math.random();\n            clusters[index*3 + 2] = Math.random();\n          }else{\n            clusters[index*3] = clusterColors[cluster_int][0];\n            clusters[index*3 + 1] = clusterColors[cluster_int][1];\n            clusters[index*3 + 2] = clusterColors[cluster_int][2];\n          }\n          \n      }\n\n      for (let i = 0; i < this.props.settings.sprite_number; i++) {\n        let start = i * this.sprite_size;\n        let end = (i + 1) * this.sprite_size;\n        if (i === this.props.settings.sprite_number - 1) end = this.props.settings.sprite_number * this.sprite_size;\n        ranges.push([start, end]);\n        clustersAr_sliced.push(clusters.slice(start*3, end*3));\n      }\n    }\n    \n    for (let c = 0; c < this.props.settings.sprite_number; c++) {\n      let points = this.scene.children[0].children[c];\n      if( clusterSelected !==\"disabled\" ){\n        points.geometry.attributes.cluster = new THREE.BufferAttribute(\n          clustersAr_sliced[c],\n          3\n        );\n        points.geometry.attributes.cluster.needsUpdate = true;\n        \n        points.material.uniforms.clusterActive.value = 1.0;\n        points.material.uniforms.clusterActive.needsUpdate = true;\n      }else{\n        points.material.uniforms.clusterActive.value = 0.0;\n        points.material.uniforms.clusterActive.needsUpdate = true;\n      }\n    }\n\n\n  }\n\n  highlightPoint(sprite_index, digit_index, full_index) {    \n    let { algorithm_choice, mappings } = this.props;\n\n    let point = this.scene.children[1].children[0];\n\n    // console.log(mappings[algorithm_choice][full_index]);\n    let embedding = mappings[algorithm_choice][full_index];\n\n    let vert = new THREE.Vector3(embedding[0], embedding[1], 0);\n    let vertices = [vert];\n\n    var offsets = new Float32Array(2); // 2 coordinates per point\n\n    let x = ((digit_index % this.props.settings.sprite_side) * this.props.settings.sprite_image_size) / 2048;\n    let y = (Math.floor(digit_index / this.props.settings.sprite_side) * this.props.settings.sprite_image_size) / 2048;\n    offsets[0] = x;\n    offsets[1] = y;\n\n    point.geometry.attributes.position.copyVector3sArray(vertices);\n    point.geometry.attributes.position.needsUpdate = true; // required after the first render\n    point.geometry.attributes.offset.array = offsets;\n    point.geometry.attributes.offset.needsUpdate = true; // required after the first render\n\n    // need to set attributes on geometry and uniforms on material\n    point.material.uniforms.texture.value = this.textures[sprite_index];\n  }\n\n  removeHighlights() {\n    let highlight_container = this.scene.children[1];\n    let highlights = highlight_container.children;\n    highlight_container.remove(...highlights);\n  }\n\n  checkIntersects(mouse_position) {\n    let { width, height, previewPane_ctx, previewPane_image_size } = this.props;\n\n    function mouseToThree([mouseX, mouseY]) {\n      return new THREE.Vector3(\n        (mouseX / width) * 2 - 1,\n        -(mouseY / height) * 2 + 1,\n        1\n      );\n    }\n\n    function sortIntersectsByDistanceToRay(intersects) {\n      return _.sortBy(intersects, 'distanceToRay');\n    }\n\n    let mouse_vector = mouseToThree(mouse_position);\n    this.raycaster.setFromCamera(mouse_vector, this.camera);\n    this.raycaster.params.Points.threshold = 0.25;\n    let intersects = this.raycaster.intersectObjects(\n      this.scene.children[0].children\n    );\n    if (intersects[0]) {\n      let sorted_intersects = sortIntersectsByDistanceToRay(intersects);\n      let intersect = sorted_intersects[0];\n      let sprite_index = intersect.object.userData.sprite_index;\n      let digit_index = intersect.index;\n      let full_index = sprite_index * this.sprite_size + digit_index;\n      // if filter is null then allow selected all, then when filter is defined only allow visible image to be selected\n      if( this.filterAr===undefined || this.filterAr[full_index]<1.0){\n        this.props.setHoverIndex(full_index);\n        // console.log(full_index)\n        this.highlightPoint(sprite_index, digit_index, full_index);\n        this.scene.children[1].visible = true;\n        previewPane_ctx.clearRect(0, 0,  previewPane_image_size, previewPane_image_size);\n        previewPane_ctx.fillRect(0, 0, previewPane_image_size, previewPane_image_size);\n        previewPane_ctx.fillStyle = \"transparent\";\n        try{\n          previewPane_ctx.drawImage(\n            this.datasetIMG[sprite_index],\n            // source rectangle\n            (digit_index % this.props.settings.sprite_side) * this.props.settings.sprite_image_size,\n            Math.floor(digit_index / this.props.settings.sprite_side) * this.props.settings.sprite_image_size,\n            this.props.settings.sprite_image_size,\n            this.props.settings.sprite_image_size,\n            // destination rectangle\n            0,\n            0,\n            previewPane_image_size,\n            previewPane_image_size\n          );\n        }catch (error){\n          console.log(\"previewPane_ctx.drawImage\",error);\n        }\n      }\n    } else {\n      this.props.setHoverIndex(null);\n      this.scene.children[1].visible = false;\n      previewPane_ctx.fillRect(0, 0, previewPane_image_size, previewPane_image_size);\n      previewPane_ctx.fillStyle = \"transparent\";\n    }\n  }\n\n  handleMouse() {\n    let view = d3.select(this.renderer.domElement);\n    this.raycaster = new THREE.Raycaster();\n\n    view.on('mousemove', () => {\n      let [mouseX, mouseY] = d3.mouse(view.node());\n      let mouse_position = [mouseX, mouseY];\n      this.checkIntersects(mouse_position);\n    })\n    \n    view.on('dblclick', () => {\n      if(this.scene.children[1].visible) this.props.clickOnImage();\n    })\n  }\n\n  init() {\n    let { width, height } = this.props;\n    this.scene = new THREE.Scene();\n    let vFOV = 75;\n    let aspect = width / height;\n    let near = 0.01;\n    let far = 1000;\n\n    this.camera = new THREE.PerspectiveCamera(vFOV, aspect, near, far);\n\n    this.renderer = new THREE.WebGLRenderer({ preserveDrawingBuffer: true,alpha: true });\n    this.renderer.setClearColor(0xffffff, 0);\n    this.renderer.autoClear = false;\n    this.renderer.setSize(width, height);\n    this.renderer.domElement.id = \"threeCanvas\";\n    this.mount.appendChild(this.renderer.domElement);\n\n    this.addPoints();\n    this.addBlankHighlightPoints();\n    this.setupCamera();\n    this.animate();\n    this.handleMouse();\n    this.changeEmbeddings(this.props.algorithm_choice);\n  }\n\n  animate() {\n    requestAnimationFrame(this.animate);\n    TWEEN.update();\n    this.renderer.clear()\n    // 1-Pass :: Render filtered images (grey semi-transparent images that create a shadow behind)\n    if(parseInt(this.props.greyRenderTypeSelected)===0){\n      this.updatePass2Shader(1)\n      this.renderer.render(this.scene, this.camera);\n    }\n    // 2-Pass - Render all images\n    this.updatePass2Shader(2)\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  componentDidUpdate(prevProps) {\n    let { width, height } = this.props;\n    if (width !== prevProps.width || height !== prevProps.height) {\n      this.handleResize(width, height);\n    }\n    \n    if (prevProps.algorithm_choice !== this.props.algorithm_choice) {\n      this.changeEmbeddings(\n        //prevProps.algorithm_choice,\n        this.props.algorithm_choice,\n      );\n    }\n    \n    if (this.props.scaleMin !== prevProps.scaleMin || this.props.scaleMax !== prevProps.scaleMax){\n      this.handleResize(width, height);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  render() {\n    let { width, height } = this.props;\n    const tileProgress = this.state.tilesLoaded;\n    const allTiles = this.props.settings.sprite_number;\n    return (\n      <><div>\n        {tileProgress < 1 ? <div className=\"loading\"><CircularProgress color=\"inherit\"/><div>loading tiles...</div></div> : \n        tileProgress < allTiles-1 ? <div className=\"loading-small\"><CircularProgress color=\"inherit\"/><div>loading...</div></div> : \n        ''\n      }\n      </div><div\n          style={{ width: width, height: height, overflow: 'hidden' }}\n          ref={mount => {\n            this.mount = mount\n          } } /></>\n    ) \n  }\n}\n\nexport default React.memo(Projection)\n\n\n","import React, { Component } from 'react'\nimport PreviewPane from './PreviewPane'\nimport SliderPane from './SliderPane'\nimport FilterPane from './FilterPane'\nimport InfoPane from './InfoPane'\nimport ViewPane from './ViewPane'\nimport MappingsPane from './MappingsPane'\nimport Export from './Export'\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\nimport './scss/Menu.scss';\nimport Projection from './Projection'\nimport * as _ from 'lodash'\nimport { CircularProgress } from \"@material-ui/core\";\nimport { FaDatabase, FaSlidersH, FaSearch, FaCloudDownloadAlt, FaAngleDoubleLeft, FaAngleDoubleRight, FaRegImage, FaInfo, FaQuestion, FaEye } from \"react-icons/fa\";\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props)\n    let total = this.props.settings[\"total\"]\n    this.state = {\n      ww: null,\n      wh: null,\n      hover_index: 0,\n      previewPane_height: null,\n      controlPane_height: null,\n      filterPane_height: null,\n      algorithm_choice: null,\n      allFilter: {},\n      currentProjection: new Float32Array(total).fill(0),\n      currentFilter: new Float32Array(total).fill(0),\n      currentSearch: new Float32Array(total).fill(0),\n      scaleMin: 14,\n      scaleMax: 70,\n      filterGrey: true,\n      clusterTypeSelected:'-',\n      greyRenderTypeSelected:0,\n      dimensions: {},\n      collapsedControl: false,\n      collapsedObject: false\n    }\n    this.previewPane_ctx = null;\n    this.setSize = _.debounce(this.setSize.bind(this), 200);\n    this.setPreviewPaneCanvas = this.setPreviewPaneCanvas.bind(this);\n    this.setPreviewImage = this.setPreviewImage.bind(this);\n    this.selectAlgorithm = this.selectAlgorithm.bind(this);\n    this.selectDataset = this.selectDataset.bind(this);\n    this.toggleControl = this.toggleControl.bind(this);\n    this.refProjection = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setDefaults();\n    this.selectAlgorithm(this.props.algorithm_name);\n    this.setSize();\n    window.addEventListener('resize', this.setSize);\n  }\n\n  setDefaults(){\n    if (this.props.settings[\"total\"] < 20000) {\n      this.setState( { scaleMin: 15, filterGrey: true, greyRenderTypeSelected: 0 } )\n    } else {\n      this.setState( { scaleMin: 5, filterGrey: false, greyRenderTypeSelected: 1 } )\n    }\n  }\n\n  setRenderer(renderer){\n    this.setState( { renderer: renderer});\n  }\n\n  handleChangeScale(e,val) {\n    this.setState({ scaleMin: val})\n  }\n\n  handleChangeZoom(e,val) {\n    this.setState({ scaleMax: val})\n  }\n\n  handleChangeCluster(e) {\n    let value = e.target.value;\n    this.setState({ clusterTypeSelected: parseInt(value)})\n    console.log(e.target)\n    try{\n      this.refProjection.current.updateClusterColors(value)\n    } catch(error) {console.log(\"error updateClusterColors\")}\n  }\n\n  handleChangeGrey(value) {\n    this.setState({ greyRenderTypeSelected: value})\n  }\n\n  calculateProjection=(newArr,type, update)=>{\n    let A, B, arr;\n    if(type===\"filter\"){\n      this.setState({currentFilter: newArr})\n      A = newArr;\n      B = this.state.currentSearch;\n    }\n    if(type===\"search\"){\n      this.setState({currentSearch: newArr});\n      A = this.state.currentFilter;\n      B = newArr;\n    }\n    if(update){\n      arr = A.map((x, idx) => x + B[idx]);\n      this.setState({currentProjection: arr});\n    } else {\n      arr = newArr;\n    }\n    try{\n      this.refProjection.current.updateProjection(arr);\n    } catch(error) {}\n    }\n\n  selectAlgorithm(v) {\n    let i = this.props.algorithm_options.indexOf(v);\n    if(i<0) i = 0;\n    this.setState({ algorithm_choice: i });\n    // Save algorithm in URL parameters\n    this.props.addToUrl('projection',this.props.algorithm_options[i]);\n  }\n\n  selectDataset(p) {\n    this.props.changeDataset(p);\n  }\n\n  setSize() {\n    this.setState({ ww: window.innerWidth, wh: window.innerHeight });\n    let previewPane_height = this.previewPane_mount.offsetHeight;\n    this.setState({ previewPane_height: previewPane_height });\n    if (this.previewPane_ctx) this.previewPane_ctx.imageSmoothingEnabled = false;\n    if ( window.innerWidth < 900) {\n      this.setState({ collapsedControl: true, collapsedObject: true })\n    } else {\n      this.setState({ collapsedControl: false, collapsedObject: false })\n\n    }\n  }\n\n  setPreviewPaneCanvas(canvas) {\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = false;\n    this.previewPane_ctx = ctx;\n    console.log(ctx);\n  }\n\n  setPreviewImage() {\n      return (\n      <img\n      src={ this.props.settings.url_prefix + this.props.metadata[this.state.hover_index].filename }\n      alt=\"preview\"\n      style={{\n        verticalAlign: \"middle\",\n      }}\n      />)\n  }\n\n\n  setHoverIndex(hover_index) {\n    if (hover_index != null){\n      this.setState({ hover_index: hover_index });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setSize);\n  }\n\n  clickOnImage(){\n    console.log(\"open image\",this.state.hover_index);\n    try{\n      let url = this.props.metadata[this.state.hover_index].link_URL\n      window.open(url, '_blank', 'noopener,noreferrer');\n    }catch(err){}\n  }\n\n  toggleControl = () => {\n    this.setState({ collapsedControl: !this.state.collapsedControl \n  })}\n  \n  toggleObject = () => {\n    this.setState({ collapsedObject: !this.state.collapsedObject \n  })}\n\n\n  render() {\n    let {\n      embeddings_data,\n      mappings,\n      algorithm_options,\n      dataset_options,\n      metadata,\n      settings,\n      barData\n    } = this.props;\n\n    let {\n      ww,\n      wh,\n      hover_index,\n      algorithm_choice,\n      currentProjection,\n      allFilter,\n      greyRenderTypeSelected,\n      clusterTypeSelected,\n      collapsedControl,\n      collapsedObject\n    } = this.state;\n\n    let previewPane_ctx = this.previewPane_ctx;\n    \n    let line_height = 1.5;\n\n    let previewPane_style = {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      // width: 320,\n      height: 'auto',\n      maxHeight: '100vh',\n      overflow: 'auto',\n      background: '#222',\n      zIndex: 8\n    };\n    let controlMenu_style = {\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      // width: 300,\n      // left:ww-350,\n      height: 'auto',\n      maxHeight: '100vh',\n      overflow: 'auto',\n      background: '#222',\n      zIndex: 8\n    };\n\n    let main_style = {\n      position: 'relative',\n      background: '#111',\n      overflow: 'hidden',\n      width: ww, \n      height: wh\n    };\n\n    let previewPane_image_size = '320px';\n    let font_size = 16;\n\n    let grem = font_size * line_height;\n\n    let general_style = {\n      fontSize: font_size,\n      lineHeight: line_height,\n    };\n\n    let displayNumb = 0;\n    for(let i=0;i<settings.total;i++){\n      if(currentProjection[i]===0){\n        displayNumb++;\n      }\n    }\n\n\n    return ww !== null ? (\n      <div style={general_style}>\n        <div\n          style={controlMenu_style}\n          ref={controlMenu_mount => {\n            this.controlMenu_mount = controlMenu_mount\n          }}\n        >\n          <div>\n          <ProSidebar collapsed={collapsedControl}>\n            <Menu iconShape='square'>\n            <MenuItem>\n            <h3></h3>\n            <a className=\"collapseCon\" onClick={this.toggleControl}>{collapsedControl ? < FaAngleDoubleLeft />  : < FaAngleDoubleRight /> }</a>\n            </MenuItem>\n\n              <SubMenu defaultOpen\n              title={collapsedControl ? null : \"Data & Projections\"}  \n              icon={collapsedControl ? < FaDatabase />  : null }\n              >\n              <MenuItem>\n              <MappingsPane\n                grem={grem}\n                algorithm_options={algorithm_options}\n                algorithm_choice={algorithm_choice}\n                selectAlgorithm={this.selectAlgorithm}\n                dataset_options={dataset_options}\n                selectDataset={this.selectDataset}\n                selectedDataset={this.props.selectedDataset}\n                datasetInfo={settings[\"datasetInfo\"]}\n              />\n              </MenuItem>\n              </SubMenu>\n              <SubMenu defaultOpen\n              title={collapsedControl ? null : \"Dimension Filters\"}  \n              icon={collapsedControl ? <FaSlidersH />  : null }\n              >\n\n\n                <MenuItem>\n                <SliderPane\n                grem={grem}\n                metadata={metadata}\n                hover_index={hover_index}\n                settings={settings}\n                barData={barData}\n                calculateProjection={this.calculateProjection}\n                currentProjection={currentProjection}\n                allFilter={allFilter}\n                />\n                </MenuItem>\n                </SubMenu>\n\n                <SubMenu\n                title={collapsedControl ? null : \"Advanced Filters\"}  \n                icon={collapsedControl ? < FaSearch />  : null }\n                >\n\n                <MenuItem>\n                  <FilterPane\n                    grem={grem}\n                    calculateProjection={this.calculateProjection}\n                    hover_index={hover_index}\n                    settings={settings}\n                    metadata={metadata}\n                    currentProjection={currentProjection}\n                    allFilter={allFilter}\n                  />\n                </MenuItem>\n              </SubMenu>\n              <SubMenu\n                title={collapsedControl ? null : \"Export Filtered Data\"}  \n                icon={collapsedControl ? <FaCloudDownloadAlt />  : null }\n                >\n\n              <MenuItem>\n                <Export\n                metadata = {metadata}\n                currentProjection = {currentProjection}\n                />\n              </MenuItem>\n            </SubMenu>\n            </Menu>\n          </ProSidebar>\n          </div>\n        </div>    \n\n        <div\n          style={previewPane_style}\n          ref={previewPane_mount => {\n            this.previewPane_mount = previewPane_mount\n          }}\n        >\n\n        <div>\n          <ProSidebar collapsed={collapsedObject}>\n            <Menu iconShape='square'>   \n            <MenuItem>\n            {collapsedObject ? <h3></h3> : <h3>Collection Space Navigator</h3> }\n            <a className='collapseObj' onClick={this.toggleObject}>{collapsedObject ? < FaAngleDoubleRight />  : < FaAngleDoubleLeft /> }</a>\n            </MenuItem>\n              <SubMenu defaultOpen\n                title={collapsedObject ? null : \"Object Preview\"}  \n                icon={collapsedObject ? <FaRegImage />  : null }\n                >  \n                <PreviewPane\n                  previewPane_image_size={previewPane_image_size}\n                  setPreviewPaneCanvas={this.setPreviewPaneCanvas}\n                  setPreviewImage={this.setPreviewImage}\n                  hover_index={hover_index}\n                />\n              </SubMenu>\n              <SubMenu defaultOpen\n                title={collapsedObject ? null : \"Object Info\"}  \n                icon={collapsedObject ? <FaInfo />  : null }\n                >  \n                <MenuItem>\n                <InfoPane\n                  hover_index={hover_index}\n                  metadata={metadata}\n                  infos={settings.info}\n                />\n                </MenuItem>\n              </SubMenu>\n\n              <SubMenu\n                title={collapsedObject ? null : \"Object Appearance\"}  \n                icon={collapsedObject ? <FaEye />  : null }\n                > \n                <MenuItem>\n                <ViewPane\n                  clusters={settings.clusters}\n                  scaleMin={this.state.scaleMin}\n                  scaleMax={this.state.scaleMax}\n                  filterGrey={this.state.filterGrey}\n                  handleChangeScale = {this.handleChangeScale.bind(this)}\n                  handleChangeZoom = {this.handleChangeZoom.bind(this)}\n                  handleChangeCluster = {this.handleChangeCluster.bind(this)}\n                  handleChangeGrey = {this.handleChangeGrey.bind(this)}\n                  total = {settings.total}\n                />\n                </MenuItem>\n                <MenuItem>\n                <div className='info'>showing {displayNumb} / {settings.total}</div>\n              </MenuItem>\n              </SubMenu>\n\n            <SubMenu\n              title={collapsedObject ? null : 'About'}  \n              icon={collapsedObject ? <FaQuestion />  : null }\n              >         \n              <div className='about'>\n                The Collection Space Navigator (CSN) is an <strong>interactive visualization interface for multidimensional datasets</strong>.\n                It functions as an explorative visualization tool for researching collections and their multidimensional representations. \n                We designed this tool to better understand multidimensional data, its methods, and semantic qualities through spatial navigation and filtering. \n                CSN can be used with any image collection and can be customized for specific research needs. <a href=\"https://github.com/Collection-Space-Navigator/CSN\" target=\"_blank\" rel=\"noreferrer\" ><strong>[more on GitHub...]</strong></a>\n              </div>\n              </SubMenu>\n            </Menu>\n          </ProSidebar>\n          </div>\n        </div>\n        <div style={main_style}>\n          <Projection\n            ref={this.refProjection}\n            width={main_style.width}\n            height={main_style.height}\n            embeddings_data={embeddings_data}\n            mappings={mappings}\n            metadata={metadata}\n            previewPane_ctx={previewPane_ctx}\n            previewPane_image_size={previewPane_image_size}\n            setHoverIndex={this.setHoverIndex.bind(this)}\n            algorithm_choice={algorithm_choice}\n            datasetDir={this.props.datasetDir}\n            clusterTypeSelected={clusterTypeSelected}\n            greyRenderTypeSelected={greyRenderTypeSelected}\n            settings={settings}\n            initPath={this.props.initPath}\n            scaleMin={this.state.scaleMin}\n            scaleMax={this.state.scaleMax}\n            currentProjection={currentProjection}\n            clickOnImage={this.clickOnImage.bind(this)}\n            // tiles={this.tiles}\n          />\n        </div>\n      </div>\n      \n    ) : (\n      <div className=\"loading\"><CircularProgress color=\"inherit\"/><div>loading layout...</div></div>\n    )\n  }\n}\n\nexport default Layout\n\n\n\n","import React, { Component } from 'react'\nimport {useParams, useNavigate} from \"react-router-dom\";\nimport Layout from './Layout'\nimport * as _ from 'lodash'\nimport * as d3 from 'd3'\nimport color from 'color'\n// import * as THREE from 'three'\nimport { CircularProgress } from \"@material-ui/core\";\n\n\nfunction withRouter(Component) {\n  return props => <Component {...props} params={useParams()} navigate={useNavigate()} />;\n}\n\nclass Data extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // tilesLoaded: 0,\n      algorithm_options: null,\n      dataset_options: null,\n      dataset_dirs: null,\n      embeddings_data: null,\n      mappings: null,\n      metadata:null,\n      defaultDataset:null,\n      algorithm_name:0\n    };\n  }\n\n  scaleEmbeddings(embeddings) {\n    let xs = embeddings.map(e => Math.abs(e[0]));\n    let ys = embeddings.map(e => Math.abs(e[1]));\n    let max_x = _.max(xs);\n    let max_y = _.max(ys);\n    let max = Math.max(max_x, max_y);\n    let scale = d3\n      .scaleLinear()\n      .domain([-max, max])\n      .range([-20, 20]);\n    let scaled_embeddings = embeddings.map(e => [scale(e[0]), scale(e[1])]);\n    return scaled_embeddings;\n  }\n  \n  componentDidMount() {\n    // Get parameters from URL and save to settings\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    this.setState({ selectedDataset: urlParams.get('dataset')});\n    if(urlParams.get('projection')!==undefined) this.setState({algorithm_name:urlParams.get('projection')});\n    // Load embeddings\n    this.loadInit('datasets/datasets_config.json')\n  }\n\n  loadConfig(path){\n    this.loadSettings(`datasets/${path}/config.json`);\n    this.loadBarData(`datasets/${path}/barData.json`);\n    this.loadMetadata(`datasets/${path}/metadata.json`);\n  }\n  \n  prepareMappings(ID){\n    let algorithm_options = [];\n    for (let i in this.state.settings.embeddings) {\n      console.log(this.state.settings.embeddings[i].name);\n      algorithm_options[i] = this.state.settings.embeddings[i].name;\n    }\n    this.setState({ algorithm_options: algorithm_options });\n  }\n\n  loadDataset(ID){\n    let mappings = [];\n    const embeddings = this.state.settings.embeddings;\n    for (let i in embeddings) {\n      // console.log(embeddings[i].key);\n      fetch(`${process.env.PUBLIC_URL}/datasets/${this.state.datasetDir}/${embeddings[i].file}`)\n        .then(response => response.json())\n        .then(embeddings_data => {\n          let scaled_embeddings = embeddings_data;\n          // this.scaleEmbeddings(embeddings_data);\n          mappings[i] = scaled_embeddings;\n        }\n        )\n        .then(() => {\n          this.setState({ mappings: mappings, embeddings_data: mappings[0] })\n        })\n  }\n}\n\n  // loadTiles(){ \n  //   const tile_locations = [...Array(this.state.settings.sprite_number)].map(\n  //     (n, i) => `${process.env.PUBLIC_URL}/datasets/${this.state.datasetDir}/tile_${i}.png`\n  //   )\n  //   let loader = new THREE.TextureLoader();\n  //   this.tiles = tile_locations.map(l => {\n  //     let t = loader.load(l,\n  //       function ( texture ) {\n  //         this.setState({ tilesLoaded: this.state.tilesLoaded+1 });\n  //       }.bind(this)\n  //     )\n  //     t.flipY = false\n  //     t.magFilter = THREE.NearestFilter\n  //     return t\n  //   })    \n  // }\n\n\n  addToUrl(paramName,value){\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    urlParams.set(paramName, value);\n    this.props.navigate(\"?\"+urlParams.toString());\n  }\n\n  prepareDatasets(ID){\n    let dataset_options = [];\n    let dataset_dirs = [];\n    for (let i in this.state.settings.embeddings) {\n      console.log(this.state.settings.embeddings[i].name);\n      dataset_options[i] = this.state.settings.embeddings[i].name;\n      dataset_dirs[i] = this.state.settings.embeddings[i].directory;\n    }\n    this.setState({ dataset_options: dataset_options, dataset_dirs: dataset_dirs });\n  }\n\n  changeDataset(choice){\n    this.addToUrl('dataset',choice);\n    let k = this.state.dataset_options.indexOf(choice);\n    let newDataset = this.state.dataset_dirs[k]\n    this.setState({ \n      selectedDataset: choice, \n      datasetDir: newDataset,\n      algorithm_options: null,\n      embeddings_data: null,\n      mappings: null,\n      metadata: null\n    });\n    this.loadConfig(newDataset);\n  }\n\n  loadInit(file){\n    fetch(`${process.env.PUBLIC_URL}/`+file)\n      .then(response => response.json())\n      .then(init =>{\n        let dataset_options = [];\n        let dataset_dirs = [];\n        for (let i in init.data) {\n          console.log(init.data[i].directory);\n          dataset_options[i] = init.data[i].name;\n          dataset_dirs[i] = init.data[i].directory;\n        }\n        this.setState({ dataset_options: dataset_options,dataset_dirs: dataset_dirs});\n        // Select dataset folder from defined in URL parameters\n        if(this.state.selectedDataset===null){\n          this.setState({ selectedDataset: init.data[init.default].name,  datasetDir: init.data[init.default].directory});\n          this.addToUrl('dataset',init.data[init.default].name);\n        }else{\n          let foundInitDataset = false;\n          for (let i in init.data) {\n            if(init.data[i].name===this.state.selectedDataset){\n              this.setState({datasetDir: init.data[i].directory});\n              foundInitDataset = true;\n            } \n          }\n          if(!foundInitDataset) this.setState({ selectedDataset: init.data[init.default].name,  datasetDir: init.data[init.default].directory});\n        }\n      }\n      )\n      .then(()=> \n      this.loadConfig(this.state.datasetDir))\n\n  }\n\n  loadSettings(file){\n    fetch(`${process.env.PUBLIC_URL}/`+file)\n      .then(response => response.json())\n      .then(settings =>{\n        // Convert colors from rgb(255,0,0) to array [1.0,0.0,0.0]\n        try{\n          const floatColorConvertedArr = settings.clusters.clusterColors.map(myColorFunction);\n          function myColorFunction(value) {\n            return [color(value).rgb().array()[0]/255,color(value).rgb().array()[1]/255,color(value).rgb().array()[2]/255];\n          }\n          settings.clusters.clusterColors = floatColorConvertedArr;\n        }catch(error){}\n        // Save settings to \n        this.setState({\n          settings: settings\n        });\n      }\n      )\n      .then(() =>\n      this.prepareMappings(0))\n      .then(()=> \n      this.loadDataset(0))\n      // .then(()=> \n      // this.loadTiles())\n  }\n\n  loadMetadata(file){\n    fetch(`${process.env.PUBLIC_URL}/`+file)\n      .then(response => response.json())\n      .then(metadata =>\n        this.setState({\n          metadata: metadata,\n        })\n      )\n  }\n\n  loadBarData(file){\n    fetch(`${process.env.PUBLIC_URL}/`+file)\n      .then(response => response.json())\n      .then(barData =>\n        this.setState({\n          barData: barData,\n        })\n      )\n  }\n\n\n  render() {\n    return this.state.embeddings_data && this.state.metadata ? (\n\n      <Layout\n        {...this.state}\n        addToUrl={this.addToUrl.bind(this)}\n        algorithm_name={this.state.algorithm_name}\n        algorithm_options={this.state.algorithm_options}\n        dataset_options={this.state.dataset_options}\n        dataset_dirs={this.state.dataset_dirs}\n        changeDataset={this.changeDataset.bind(this)}\n        selectedDataset={this.state.selectedDataset}\n        datasetDir={this.state.datasetDir}\n        // tiles={this.tiles}\n      />\n\n    ) : (\n      <div className=\"loading\" ><CircularProgress color=\"inherit\"/><div>loading datasets... </div></div>\n      \n    )\n  }\n}\n\nexport default withRouter(Data)\n\n","import React from \"react\";\nimport {\n  BrowserRouter, Routes, Route\n} from \"react-router-dom\";\n\n// Area components\nimport './App.css'\nimport WithRouter from './Data'\n\nexport default function App() {\n  \n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route exact path=\"/\" element={<WithRouter/>} />\n        <Route exact path=\"/CSN\" element={<WithRouter/>}/> \n      </Routes>\n    </BrowserRouter>\n  );\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}